workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always
variables:
  # Public DNS
  APP_ENDPOINT: $DEPLOYMENT_SERVER_HOST

image: alpine:3.15.1
stages:
  - build
  - deploy
.build:
  stage: build
  tags:
    - "shell"
    - "aws"
  variables:
    MICRO_SERVICE: ""
    SERVICE_VERSION: ""
  before_script:
    - export IMAGE_NAME=$CI_REGISTRY_IMAGE/frontend
    - export IMAGE_TAG=$SERVICE_VERSION
  script:
#    - whoami
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG

.deploy:
  stage: deploy
  tags:
    - "shell"
    - "aws"

  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    - export IMAGE_NAME=$CI_REGISTRY_IMAGE/frontend
    - export IMAGE_TAG=1.0
  script:
    - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ./docker-compose.yml ec2-user@$APP_ENDPOINT:/home/ec2-user
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ec2-user@$APP_ENDPOINT "
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&

      export DC_CI_REGISTRY=$CI_REGISTRY &&
      export DC_IMAGE_NAME=$IMAGE_NAME &&
      export DC_IMAGE_TAG=$IMAGE_TAG &&
      export DC_APP_PORT=$APP_PORT &&
      echo $DC_CI_REGISTRY/$DC_IMAGE_NAME:$DC_IMAGE_TAG &&
      echo registry.gitlab.com/sm-junior/frontend:1.0 && 

      docker-compose down &&
      docker image remove $DC_IMAGE_NAME:$DC_IMAGE_TAG --force &&
      docker-compose up -d"
  environment:
    name: development
    url: $APP_ENDPOINT


build_frontend:
  extends: .build
  variables:
    SERVICE_VERSION: "1.0"


deploy_frontend:
  extends: .deploy
  variables:
    APP_NAME: "frontend"




